const express = require("express");
const path = require('path');
require("dotenv").config();
const cors = require("cors");
const helmet = require('helmet');
const appLogger = require("./logger");
const logger = require('morgan');
const rtracer = require('cls-rtracer');
const { errorHandler } = require("./middlewares/error-handler");
const { StatusCodes } = require("http-status-codes");
const moviesRouter = require("./routes/movie")

const app = express();

app.set('view engine', 'ejs');
app.set('views', path.join(__dirname, 'views'));

//middleWares
app.use(helmet.hidePoweredBy());

app.use(express.json({ limit: "200mb" }));
app.use(
  express.urlencoded({
    limit: "200mb",
    extended: false,
    parameterLimit: 1000000,
  })
);
app.use(express.static(path.join(__dirname, 'public')));
app.use(cors());

app.use(rtracer.expressMiddleware());

// logging
logger.token("requestId", () => rtracer.id());
const loggerFormat =
  '[:requestId] :remote-addr - :remote-user [:date[clf]] ":method :url HTTP/:http-version" :status :res[content-length] ":referrer" ":user-agent"';
app.use(logger(loggerFormat, {
  stream: {
    write: (message) => {
      // Use Winston to log the message generated by Morgan
      appLogger.info(message.trim());
    },
  },
})); //to output stream logss to the console


//routes
app.use("/", moviesRouter);




// Global error handler
app.use(errorHandler);

app.use((_, res) => {
    res.render('error', { 
      message: "Endpoint not found", 
      status: StatusCodes.NOT_FOUND
  })
});

module.exports = app;
